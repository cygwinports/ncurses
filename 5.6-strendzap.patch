--- origsrc/ncurses-5.6/progs/tput.c	2006-11-25 18:27:47.000000000 -0600
+++ src/ncurses-5.6/progs/tput.c	2008-07-28 10:09:59.406250000 -0500
@@ -61,6 +61,9 @@
 static bool is_init = FALSE;
 static bool is_reset = FALSE;
 
+static char *
+strendzap(char *str, const char *pat);
+
 static void
 quit(int status, const char *fmt,...)
 {
@@ -84,8 +87,24 @@
 static void
 check_aliases(const char *name)
 {
-    is_init = (strcmp(name, PROG_INIT) == 0);
-    is_reset = (strcmp(name, PROG_RESET) == 0);
+    char* name_no_exe;
+    char* init_no_exe;
+    char* reset_no_exe;
+
+    name_no_exe  = strdup(name);
+    init_no_exe  = strdup(PROG_INIT);
+    reset_no_exe = strdup(PROG_RESET);
+
+    name_no_exe  = strendzap(name_no_exe,  ".exe");
+    init_no_exe  = strendzap(init_no_exe,  ".exe");
+    reset_no_exe = strendzap(reset_no_exe, ".exe");
+
+    is_init  = (strcmp(name_no_exe, init_no_exe)  == 0);
+    is_reset = (strcmp(name_no_exe, reset_no_exe) == 0);
+
+    free(name_no_exe);
+    free(init_no_exe);
+    free(reset_no_exe);
 }
 
 /*
@@ -434,3 +453,26 @@
 
     ExitProgram(result);
 }
+
+static char * strendzap(char *str, const char *pat)
+{
+  size_t len, patlen;
+
+  if ((str == NULL) || (pat == NULL))
+    return str;
+
+  if ((*str == '\0') || (*pat == '\0'))
+    return str;
+
+  len = strlen(str);
+  patlen = strlen(pat);
+
+  if (patlen <= len)
+  {
+    char* p = str + len - patlen;
+    if (strcmp(p, pat) == 0)
+      *p = '\0';
+  }
+  return str;
+}
+
